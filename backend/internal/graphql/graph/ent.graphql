directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Chat implements Node {
  id: ID!
  title: String!
  accepted: Boolean!
  locked: Boolean!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  deal: Deal
  employees: [Employee!]
  messages: [Message!]
}
type Company implements Node {
  id: ID!
  name: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  employee: [Employee!]
}
type Costumer implements Node {
  id: ID!
  name: String!
  phone: String!
  email: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  deals: [Deal!]
}
"""
CreateChatInput is used for create Chat object.
Input was generated by ent.
"""
input CreateChatInput {
  title: String!
  accepted: Boolean!
  locked: Boolean!
  createdat: Time
  updatedat: Time
  dealID: ID
  employeeIDs: [ID!]
  messageIDs: [ID!]
}
"""
CreateCompanyInput is used for create Company object.
Input was generated by ent.
"""
input CreateCompanyInput {
  name: String!
  createdat: Time
  updatedat: Time
  employeeIDs: [ID!]
}
"""
CreateCostumerInput is used for create Costumer object.
Input was generated by ent.
"""
input CreateCostumerInput {
  name: String!
  phone: String!
  email: String!
  createdat: Time
  updatedat: Time!
  dealIDs: [ID!]
}
"""
CreateCrmFieldInput is used for create CrmField object.
Input was generated by ent.
"""
input CreateCrmFieldInput {
  name: String!
  section: String!
  type: CrmFieldType!
  createdat: Time
  updatedat: Time
  dropdownlistIDs: [ID!]
  dealcrmfieldIDs: [ID!]
}
"""
CreateDealCrmFieldInput is used for create DealCrmField object.
Input was generated by ent.
"""
input CreateDealCrmFieldInput {
  value: String!
  createdat: Time
  updatedat: Time
  dealID: ID
  crmfieldID: ID
}
"""
CreateDealInput is used for create Deal object.
Input was generated by ent.
"""
input CreateDealInput {
  title: String!
  source: String!
  createdat: Time
  updatedat: Time
  costumerID: ID!
  chatID: ID
  stageID: ID!
  dealcrmfieldIDs: [ID!]
}
"""
CreateDepartmentInput is used for create Department object.
Input was generated by ent.
"""
input CreateDepartmentInput {
  name: String!
  createdat: Time
  updatedat: Time
  employeeIDs: [ID!]
  queueIDs: [ID!]
}
"""
CreateDropdownListInput is used for create DropdownList object.
Input was generated by ent.
"""
input CreateDropdownListInput {
  value: String!
  createdat: Time
  updatedat: Time
  crmfieldIDs: [ID!]!
}
"""
CreateEmployeeAuthInput is used for create EmployeeAuth object.
Input was generated by ent.
"""
input CreateEmployeeAuthInput {
  createdat: Time
  updatedat: Time
}
"""
CreateEmployeeInput is used for create Employee object.
Input was generated by ent.
"""
input CreateEmployeeInput {
  name: String!
  active: Boolean
  createdat: Time
  updatedat: Time
  employeeauthID: ID!
  companyID: ID!
  departmentID: ID!
  chatIDs: [ID!]
  queueIDs: [ID!]
  messageIDs: [ID!]
}
"""
CreateFileInput is used for create File object.
Input was generated by ent.
"""
input CreateFileInput {
  url: String!
  caption: String
  mimetype: String!
  filename: String!
  messageID: ID
}
"""
CreateMessageInput is used for create Message object.
Input was generated by ent.
"""
input CreateMessageInput {
  sentby: MessageSentBy!
  private: Boolean!
  type: MessageType!
  createdat: Time
  updatedat: Time
  chatID: ID
  employeeIDs: [ID!]
  textID: ID
  fileID: ID
}
"""
CreatePipelineInput is used for create Pipeline object.
Input was generated by ent.
"""
input CreatePipelineInput {
  name: String!
  createdat: Time
  updatedat: Time
  stageIDs: [ID!]
}
"""
CreateQueueInput is used for create Queue object.
Input was generated by ent.
"""
input CreateQueueInput {
  name: String!
  type: QueueType
  createdat: Time
  updatedat: Time
  stageIDs: [ID!]
  employeeIDs: [ID!]
  departmentIDs: [ID!]!
}
"""
CreateStageInput is used for create Stage object.
Input was generated by ent.
"""
input CreateStageInput {
  name: String!
  color: String
  lossorgain: Boolean!
  createdat: Time
  updatedat: Time
  pipelineID: ID!
  dealIDs: [ID!]
  queueID: ID
}
"""
CreateTextInput is used for create Text object.
Input was generated by ent.
"""
input CreateTextInput {
  text: String!
  messageID: ID
}
type CrmField implements Node {
  id: ID!
  name: String!
  section: String!
  type: CrmFieldType!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  dropdownlist: [DropdownList!] @goField(name: "DropdownList", forceResolver: false)
  dealcrmfield: [DealCrmField!] @goField(name: "DealCrmField", forceResolver: false)
}
"""
CrmFieldType is enum for the field type
"""
enum CrmFieldType @goModel(model: "github.com/gitwb-c/crm.saas/backend/internal/ent/crmfield.Type") {
  txt
  date
  checkbox
  dropdownList
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Deal implements Node {
  id: ID!
  title: String!
  source: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  costumer: Costumer!
  chat: Chat
  stage: Stage!
  dealcrmfields: [DealCrmField!] @goField(name: "DealCrmFields", forceResolver: false)
}
type DealCrmField implements Node {
  id: ID!
  value: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  deal: Deal
  crmfield: CrmField @goField(name: "CrmField", forceResolver: false)
}
type Department implements Node {
  id: ID!
  name: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  employee: [Employee!]
  queues: [Queue!]
}
type DropdownList implements Node {
  id: ID!
  value: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  crmfield: [CrmField!]! @goField(name: "CrmField", forceResolver: false)
}
type Employee implements Node {
  id: ID!
  name: String!
  active: Boolean!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  employeeauth: EmployeeAuth! @goField(name: "EmployeeAuth", forceResolver: false)
  company: Company!
  department: Department!
  chat: [Chat!]
  queues: [Queue!]
  messages: [Message!]
}
type EmployeeAuth implements Node {
  id: ID!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
}
"""
Ordering options for Employee connections
"""
input EmployeeOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Employees.
  """
  field: EmployeeOrderField!
}
"""
Properties by which Employee connections can be ordered.
"""
enum EmployeeOrderField {
  NAME
}
type File implements Node {
  id: ID!
  url: String!
  caption: String
  mimetype: String! @goField(name: "MimeType", forceResolver: false)
  filename: String! @goField(name: "FileName", forceResolver: false)
  message: Message
}
type Message implements Node {
  id: ID!
  sentby: MessageSentBy! @goField(name: "SentBy", forceResolver: false)
  private: Boolean!
  type: MessageType!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  chat: Chat
  employee: [Employee!]
  text: Text
  file: File
}
"""
MessageSentBy is enum for the field sentBy
"""
enum MessageSentBy @goModel(model: "github.com/gitwb-c/crm.saas/backend/internal/ent/message.SentBy") {
  employee
  costumer
}
"""
MessageType is enum for the field type
"""
enum MessageType @goModel(model: "github.com/gitwb-c/crm.saas/backend/internal/ent/message.Type") {
  text
  audio
  image
  file
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/gitwb-c/crm.saas/backend/internal/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Pipeline implements Node {
  id: ID!
  name: String!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  stages: [Stage!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  chats: [Chat!]!
  companies: [Company!]!
  costumers: [Costumer!]!
  crmFields: [CrmField!]!
  deals: [Deal!]!
  dealCrmFields: [DealCrmField!]!
  departments: [Department!]!
  dropdownLists: [DropdownList!]!
  employees: [Employee!]!
  employeeAuths: [EmployeeAuth!]!
  files: [File!]!
  messages: [Message!]!
  pipelines: [Pipeline!]!
  queues: [Queue!]!
  stages: [Stage!]!
  texts: [Text!]!
}
type Queue implements Node {
  id: ID!
  name: String!
  type: QueueType!
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  stages: [Stage!]
  employees: [Employee!]
  department: [Department!]!
}
"""
QueueType is enum for the field type
"""
enum QueueType @goModel(model: "github.com/gitwb-c/crm.saas/backend/internal/ent/queue.Type") {
  ring
}
type Stage implements Node {
  id: ID!
  name: String!
  color: String!
  lossorgain: Boolean! @goField(name: "LossOrGain", forceResolver: false)
  createdat: Time! @goField(name: "CreatedAt", forceResolver: false)
  updatedat: Time! @goField(name: "UpdatedAt", forceResolver: false)
  pipeline: Pipeline!
  deals: [Deal!]
  queue: Queue
}
type Text implements Node {
  id: ID!
  text: String!
  message: Message
}
"""
UpdateChatInput is used for update Chat object.
Input was generated by ent.
"""
input UpdateChatInput {
  title: String
  accepted: Boolean
  locked: Boolean
  updatedat: Time
  dealID: ID
  clearDeal: Boolean
  addEmployeeIDs: [ID!]
  removeEmployeeIDs: [ID!]
  clearEmployees: Boolean
  addMessageIDs: [ID!]
  removeMessageIDs: [ID!]
  clearMessages: Boolean
}
"""
UpdateCompanyInput is used for update Company object.
Input was generated by ent.
"""
input UpdateCompanyInput {
  name: String
  updatedat: Time
  addEmployeeIDs: [ID!]
  removeEmployeeIDs: [ID!]
  clearEmployee: Boolean
}
"""
UpdateCostumerInput is used for update Costumer object.
Input was generated by ent.
"""
input UpdateCostumerInput {
  name: String
  phone: String
  email: String
  updatedat: Time
  addDealIDs: [ID!]
  removeDealIDs: [ID!]
  clearDeals: Boolean
}
"""
UpdateCrmFieldInput is used for update CrmField object.
Input was generated by ent.
"""
input UpdateCrmFieldInput {
  name: String
  section: String
  updatedat: Time
  addDropdownListIDs: [ID!]
  removeDropdownListIDs: [ID!]
  clearDropdownList: Boolean
  addDealCrmFieldIDs: [ID!]
  removeDealCrmFieldIDs: [ID!]
  clearDealCrmField: Boolean
}
"""
UpdateDealCrmFieldInput is used for update DealCrmField object.
Input was generated by ent.
"""
input UpdateDealCrmFieldInput {
  value: String
  updatedat: Time
  dealID: ID
  clearDeal: Boolean
  crmfieldID: ID
  clearCrmField: Boolean
}
"""
UpdateDealInput is used for update Deal object.
Input was generated by ent.
"""
input UpdateDealInput {
  title: String
  source: String
  updatedat: Time
  costumerID: ID
  chatID: ID
  clearChat: Boolean
  stageID: ID
  addDealCrmFieldIDs: [ID!]
  removeDealCrmFieldIDs: [ID!]
  clearDealCrmFields: Boolean
}
"""
UpdateDepartmentInput is used for update Department object.
Input was generated by ent.
"""
input UpdateDepartmentInput {
  name: String
  updatedat: Time
  addEmployeeIDs: [ID!]
  removeEmployeeIDs: [ID!]
  clearEmployee: Boolean
  addQueueIDs: [ID!]
  removeQueueIDs: [ID!]
  clearQueues: Boolean
}
"""
UpdateDropdownListInput is used for update DropdownList object.
Input was generated by ent.
"""
input UpdateDropdownListInput {
  value: String
  updatedat: Time
  addCrmFieldIDs: [ID!]
  removeCrmFieldIDs: [ID!]
}
"""
UpdateEmployeeAuthInput is used for update EmployeeAuth object.
Input was generated by ent.
"""
input UpdateEmployeeAuthInput {
  updatedat: Time
}
"""
UpdateEmployeeInput is used for update Employee object.
Input was generated by ent.
"""
input UpdateEmployeeInput {
  name: String
  active: Boolean
  updatedat: Time
  employeeauthID: ID
  companyID: ID
  departmentID: ID
  addChatIDs: [ID!]
  removeChatIDs: [ID!]
  clearChat: Boolean
  addQueueIDs: [ID!]
  removeQueueIDs: [ID!]
  clearQueues: Boolean
  addMessageIDs: [ID!]
  removeMessageIDs: [ID!]
  clearMessages: Boolean
}
"""
UpdateFileInput is used for update File object.
Input was generated by ent.
"""
input UpdateFileInput {
  url: String
  caption: String
  clearCaption: Boolean
  mimetype: String
  filename: String
  messageID: ID
  clearMessage: Boolean
}
"""
UpdateMessageInput is used for update Message object.
Input was generated by ent.
"""
input UpdateMessageInput {
  sentby: MessageSentBy
  private: Boolean
  type: MessageType
  updatedat: Time
  chatID: ID
  clearChat: Boolean
  addEmployeeIDs: [ID!]
  removeEmployeeIDs: [ID!]
  clearEmployee: Boolean
  textID: ID
  clearText: Boolean
  fileID: ID
  clearFile: Boolean
}
"""
UpdatePipelineInput is used for update Pipeline object.
Input was generated by ent.
"""
input UpdatePipelineInput {
  name: String
  updatedat: Time
  addStageIDs: [ID!]
  removeStageIDs: [ID!]
  clearStages: Boolean
}
"""
UpdateQueueInput is used for update Queue object.
Input was generated by ent.
"""
input UpdateQueueInput {
  name: String
  type: QueueType
  updatedat: Time
  addStageIDs: [ID!]
  removeStageIDs: [ID!]
  clearStages: Boolean
  addEmployeeIDs: [ID!]
  removeEmployeeIDs: [ID!]
  clearEmployees: Boolean
  addDepartmentIDs: [ID!]
  removeDepartmentIDs: [ID!]
}
"""
UpdateStageInput is used for update Stage object.
Input was generated by ent.
"""
input UpdateStageInput {
  name: String
  color: String
  lossorgain: Boolean
  updatedat: Time
  pipelineID: ID
  addDealIDs: [ID!]
  removeDealIDs: [ID!]
  clearDeals: Boolean
  queueID: ID
  clearQueue: Boolean
}
"""
UpdateTextInput is used for update Text object.
Input was generated by ent.
"""
input UpdateTextInput {
  text: String
  messageID: ID
  clearMessage: Boolean
}
