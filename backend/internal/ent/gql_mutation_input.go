// Code generated by ent, DO NOT EDIT.

package ent

// CreateDealInput represents a mutation input for creating deals.
type CreateDealInput struct {
	Title string
}

// Mutate applies the CreateDealInput on the DealMutation builder.
func (i *CreateDealInput) Mutate(m *DealMutation) {
	m.SetTitle(i.Title)
}

// SetInput applies the change-set in the CreateDealInput on the DealCreate builder.
func (c *DealCreate) SetInput(i CreateDealInput) *DealCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateDealInput represents a mutation input for updating deals.
type UpdateDealInput struct {
	Title *string
}

// Mutate applies the UpdateDealInput on the DealMutation builder.
func (i *UpdateDealInput) Mutate(m *DealMutation) {
	if v := i.Title; v != nil {
		m.SetTitle(*v)
	}
}

// SetInput applies the change-set in the UpdateDealInput on the DealUpdate builder.
func (c *DealUpdate) SetInput(i UpdateDealInput) *DealUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateDealInput on the DealUpdateOne builder.
func (c *DealUpdateOne) SetInput(i UpdateDealInput) *DealUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
